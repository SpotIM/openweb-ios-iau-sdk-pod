// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.9.2 (swiftlang-5.9.2.2.56 clang-1500.1.0.2.5)
// swift-module-flags: -target x86_64-apple-ios12.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name SpotImStandaloneAds
// swift-module-flags-ignorable: -enable-bare-slash-regex
import AdPlayerSDK
import AppHarbrSDK
import Foundation
import GoogleMobileAds
import KmmSpotimStandaloneAd
import NimbusRenderStaticKit
import OpenWrapHandlerDFP
import OpenWrapSDK
import Swift
import UIKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
public typealias SpotImAdPlacementViewController = UIKit.UIViewController & SpotImStandaloneAds.SpotImAdPlacement
public protocol SpotImAdPlacement : AnyObject {
  var delegate: (any SpotImStandaloneAds.SpotImAdPlacementDelegate)? { get set }
  var sizeDelegate: (any SpotImStandaloneAds.SizeDelegate)? { get set }
  var state: SpotImStandaloneAds.SpotImAdState { get }
}
extension SpotImStandaloneAds.SpotImAds {
  public static func makePlacement(row: Swift.Int, column: Swift.Int, analyticsInfo: SpotImStandaloneAds.AnalyticsInfo? = nil) -> any UIKit.UIViewController & SpotImStandaloneAds.SpotImAdPlacement
}
public protocol SizeDelegate : AnyObject {
  func adPlacementHeightWillChange(to newValue: CoreFoundation.CGFloat)
}
public protocol SpotImAdPlacementDelegate : AnyObject {
  func spotImAdPlacement(_ placement: any SpotImStandaloneAds.SpotImAdPlacement, onContentEvent event: SpotImStandaloneAds.SpotImAdEvent)
  func spotImAdPlacement(_ placement: any SpotImStandaloneAds.SpotImAdPlacement, onContentState state: SpotImStandaloneAds.SpotImAdState)
}
public struct SpotImAds {
  public static func initSDK(spotId: Swift.String, storeURL: Foundation.URL, useSentry: Swift.Bool = false, rxProfile: SpotImStandaloneAds.RxProfile = .auto)
  public static func setGdprRequired(required: Swift.Bool)
  public static func setGdprConsentString(consent: Swift.String)
  public static func preload(row: Swift.Int, column: Swift.Int, analyticsInfo: SpotImStandaloneAds.AnalyticsInfo?)
}
public struct AnalyticsInfo {
  public let url: Swift.String
  public let postId: Swift.String
  public let userId: Swift.String
  public init(url: Swift.String, postId: Swift.String, userId: Swift.String)
}
@_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @objc public class SpotImAdEvent : ObjectiveC.NSObject {
  @objc deinit
}
@_hasMissingDesignatedInitializers @objc public class SpotImAdVideoEvent : SpotImStandaloneAds.SpotImAdEvent {
  final public let type: SpotImStandaloneAds.SpotImAdVideoEventType
  @objc override dynamic public var description: Swift.String {
    @objc get
  }
  @objc deinit
}
@_hasMissingDesignatedInitializers @objc final public class ContentVideoProgressEvent : SpotImStandaloneAds.SpotImAdVideoEvent {
  final public let progress: SpotImStandaloneAds.SpotImAdVideoProgress
  @objc override final public var description: Swift.String {
    @objc get
  }
  @objc deinit
}
@_hasMissingDesignatedInitializers @objc final public class SpotImAdVideoErrorEvent : SpotImStandaloneAds.SpotImAdVideoEvent {
  final public let message: Swift.String
  @objc override final public var description: Swift.String {
    @objc get
  }
  @objc deinit
}
@_hasMissingDesignatedInitializers @objc final public class SpotImAdVideoGenericEvent : SpotImStandaloneAds.SpotImAdVideoEvent {
  final public let name: Swift.String
  @objc override final public var description: Swift.String {
    @objc get
  }
  @objc deinit
}
@objc public enum SpotImAdVideoEventType : Swift.Int, Swift.CustomStringConvertible {
  case videoAdServerCalled
  case viewableImpression
  case inventory
  case impression
  case clickThrough
  case loaded
  case paused
  case progress
  case error
  case generic
  public var description: Swift.String {
    get
  }
  public init?(rawValue: Swift.Int)
  public typealias RawValue = Swift.Int
  public var rawValue: Swift.Int {
    get
  }
}
@objc public enum SpotImAdVideoProgress : Swift.Int, Swift.CustomStringConvertible {
  case started
  case firstQuartile
  case midpoint
  case thirdQuartile
  case complete
  public var description: Swift.String {
    get
  }
  public init?(rawValue: Swift.Int)
  public typealias RawValue = Swift.Int
  public var rawValue: Swift.Int {
    get
  }
}
public let sdkVersionName: Swift.String
@objc public enum SpotImAdState : Swift.Int {
  case haveVideo
  case haveDisplay
  case empty
  public init?(rawValue: Swift.Int)
  public typealias RawValue = Swift.Int
  public var rawValue: Swift.Int {
    get
  }
}
extension SpotImStandaloneAds.SpotImAdState : Swift.CustomStringConvertible {
  public var description: Swift.String {
    get
  }
}
@_hasMissingDesignatedInitializers @objc public class SpotImAdDisplayEvent : SpotImStandaloneAds.SpotImAdEvent {
  final public let type: SpotImStandaloneAds.SpotImAdDisplayEventType
  @objc override dynamic public var description: Swift.String {
    @objc get
  }
  @objc deinit
}
@_hasMissingDesignatedInitializers @objc final public class SpotImAdDisplayErrorEvent : SpotImStandaloneAds.SpotImAdDisplayEvent {
  final public let message: Swift.String
  @objc override final public var description: Swift.String {
    @objc get
  }
  @objc deinit
}
@_hasMissingDesignatedInitializers @objc final public class SpotImAdDisplayGenericEvent : SpotImStandaloneAds.SpotImAdDisplayEvent {
  final public let name: Swift.String
  @objc override final public var description: Swift.String {
    @objc get
  }
  @objc deinit
}
@objc public enum SpotImAdDisplayEventType : Swift.Int, Swift.CustomStringConvertible {
  case inventory
  case sourceLoaded
  case impression
  case viewableImpression
  case clickThrough
  case closed
  case error
  case generic
  public var description: Swift.String {
    get
  }
  public init?(rawValue: Swift.Int)
  public typealias RawValue = Swift.Int
  public var rawValue: Swift.Int {
    get
  }
}
public enum RxProfile {
  case auto
  case rxSwift
  @available(iOS 13.0, *)
  case combine
  public static func == (a: SpotImStandaloneAds.RxProfile, b: SpotImStandaloneAds.RxProfile) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
public enum SpotImAdsDebug {
  public static func setGADMobileAds(testDeviceIdentifiers: [Swift.String])
  public static func setOpenWrap(logEnabled: Swift.Bool)
}
extension SpotImStandaloneAds.SpotImAdVideoEventType : Swift.Equatable {}
extension SpotImStandaloneAds.SpotImAdVideoEventType : Swift.Hashable {}
extension SpotImStandaloneAds.SpotImAdVideoEventType : Swift.RawRepresentable {}
extension SpotImStandaloneAds.SpotImAdVideoProgress : Swift.Equatable {}
extension SpotImStandaloneAds.SpotImAdVideoProgress : Swift.Hashable {}
extension SpotImStandaloneAds.SpotImAdVideoProgress : Swift.RawRepresentable {}
extension SpotImStandaloneAds.SpotImAdState : Swift.Equatable {}
extension SpotImStandaloneAds.SpotImAdState : Swift.Hashable {}
extension SpotImStandaloneAds.SpotImAdState : Swift.RawRepresentable {}
extension SpotImStandaloneAds.SpotImAdDisplayEventType : Swift.Equatable {}
extension SpotImStandaloneAds.SpotImAdDisplayEventType : Swift.Hashable {}
extension SpotImStandaloneAds.SpotImAdDisplayEventType : Swift.RawRepresentable {}
extension SpotImStandaloneAds.RxProfile : Swift.Equatable {}
extension SpotImStandaloneAds.RxProfile : Swift.Hashable {}
